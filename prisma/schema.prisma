generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgres"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id         String      @id
  email      String      @unique
  password   Password?   @relation("UserPassword")
  name       String
  phone      String?     @unique
  accessCode AccessCode?
  recipes    Recipe[]
  groups     UserGroup[]
  confirmed  Boolean     @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id     String @id
  userId String @unique
  user   User   @relation("UserPassword", fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  hash   String
}

model UserGroup {
  groupId        String
  group          Group   @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  autoAddRecipes Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, groupId])
}

model Group {
  id          String        @id
  name        String
  invitations GroupInvite[]
  users       UserGroup[]
  recipes     Recipe[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GroupInvite {
  id      String @id
  name    String
  email   String
  groupId String
  group   Group  @relation(fields: [groupId], references: [id])

  @@unique([email, groupId])
}

model AccessCode {
  code     Int    @id
  attempts Int    @default(0)
  userId   String @unique
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model Recipe {
  id     String  @id
  name   String
  html   String
  userId String
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags   Tag[]   @relation("RecipeToTag")
  groups Group[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([id, userId])
}

model Tag {
  id      String   @id
  name    String
  slug    String   @unique
  recipes Recipe[] @relation("RecipeToTag")
}

model WaitlistMember {
  id    String @id
  name  String
  email String @unique

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
